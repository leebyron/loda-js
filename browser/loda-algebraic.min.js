!function(n){function t(n,t){return!!(n===t||n&&"function"==typeof n.equals&&n.equals(t))}function r(n,t){return c(n)?n:l(n)?n.map(u(t)):n.map?n.map(t):n.ap&&(n.of||n.constructor.of)?o(e(n,t),n):n.chain&&(n.of||n.constructor.of)||n.then?a(n,function(r){return e(n,t(r))}):t(n)}function u(n){return function(t){return c(t)?t:n(t)}}function o(n,t){return n&&n.ap?n.ap(t):a(n,function(n){return r(t,n)})}function e(n,t){return c(n)?n:n.of?n.of(t):n.constructor.of?n.constructor.of(t):l(n)?f(t)?[]:[t]:n.then?new n.constructor(function(n){return n(t)}):function(){throw Error("Not applicative: "+n)}()}function a(n,t){return c(n)?n:n.chain?n.chain(t):n.mapCat?n.mapCat(t):n.flatMap?n.flatMap(t):n.then?n.then(t):l(n)?Array.prototype.concat.apply([],n.map(u(t))):t(n)}function c(n){return null==n||n!==n}function f(n){return!(c(n)||"function"==typeof n.isValue&&!n.isValue())}function i(n){if(!f(n))throw Error("Must be non-none value: "+n);return"function"==typeof n.getValue?n.getValue():n}function p(n,t){return c(n)?t:"function"==typeof n.valueOr?n.valueOr(t):n}var l=Array.isArray;n.equals=t,n.map=r,n.apply=o,n.of=e,n.chain=a,n.isValue=f,n.getValue=i,n.valueOr=p}(Function("return this")());
//# sourceMappingURL=loda-algebraic.min.map